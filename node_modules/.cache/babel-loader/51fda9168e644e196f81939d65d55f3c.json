{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwini\\\\AndroidStudioProjects\\\\web102_unit7lab-main\\\\teammates\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport SideNav from './Components/SideNav';\nimport { useState, useEffect } from \"react\";\nimport GraphLayout from './Components/GraphLayout';\nimport { supabase } from './client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [breweryTypeCount, setBreweryTypeCount] = useState([]);\n  const [emp, setEmp] = useState({\n    fullName: '',\n    empId: '',\n    dept: '',\n    role: '',\n    email: ''\n  });\n  useEffect(() => {\n    async function fetchEmployeeData() {\n      const {\n        data,\n        error\n      } = await supabase.from('Employees').select();\n\n      if (error) {\n        console.error('Error fetching employee data:', error);\n      } else if (data && data.length > 0) {\n        const employeeData = data[0];\n        setEmp({\n          fullName: employeeData.name,\n          empId: employeeData.employee_id,\n          dept: employeeData.department,\n          role: employeeData.designation,\n          email: employeeData.email\n        });\n        const typCount = getTypCount(data);\n        console.log(typCount);\n        setBreweryTypeCount(typCount);\n      }\n    }\n\n    fetchEmployeeData();\n  }, [id]);\n\n  const getTypCount = filteredData => {\n    const typCounts = {};\n    filteredData.forEach(brew => {\n      const type = brew.department;\n      typCounts[type] = (typCounts[type] || 0) + 1;\n    });\n    return Object.entries(typCounts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whole-page\",\n      style: {\n        overflow: 'auto',\n        maxHeight: '75vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TECHsavants Inc: Where Innovation Meets Expertise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"We turn dreams into digital realities. At our core, we are more than just technologists.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 98\n        }, this), \"We are dream-weavers, alchemists of the digital realm.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideNav\",\n      children: /*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphLay\",\n      children: /*#__PURE__*/_jsxDEV(GraphLayout, {\n        breweryTypeCounts: breweryTypeCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"AGJwiHStcPWQK7bUIOtNeWEzOD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SideNav","useState","useEffect","GraphLayout","supabase","App","breweryTypeCount","setBreweryTypeCount","emp","setEmp","fullName","empId","dept","role","email","fetchEmployeeData","data","error","from","select","console","length","employeeData","name","employee_id","department","designation","typCount","getTypCount","log","id","filteredData","typCounts","forEach","brew","type","Object","entries","overflow","maxHeight"],"sources":["C:/Users/Ashwini/AndroidStudioProjects/web102_unit7lab-main/teammates/src/App.jsx"],"sourcesContent":["\nimport './App.css'\nimport SideNav from './Components/SideNav'\nimport { useState, useEffect} from \"react\";\nimport GraphLayout from './Components/GraphLayout';\nimport { supabase } from './client';\n\n\nfunction App() {\n\n  const [breweryTypeCount, setBreweryTypeCount] = useState([]);\n  const [emp, setEmp] = useState({\n    fullName: '',\n    empId: '',\n    dept: '',\n    role: '',\n    email: ''\n});\n\n  useEffect(() => {\n    async function fetchEmployeeData() {\n      const { data, error } = await supabase.from('Employees').select();\n\n      if (error) {\n        console.error('Error fetching employee data:', error);\n      } else if (data && data.length > 0) {\n        const employeeData = data[0];\n        setEmp({\n          fullName: employeeData.name,\n          empId: employeeData.employee_id,\n          dept: employeeData.department,\n          role: employeeData.designation,\n          email: employeeData.email,\n        });\n        const typCount = getTypCount(data);\n        console.log(typCount);\n        setBreweryTypeCount(typCount);\n      }\n    }\n\n    fetchEmployeeData();\n  }, [id]);\n\n  const getTypCount = (filteredData) => {\n    const typCounts = {};\n    filteredData.forEach((brew) => {\n      const type = brew.department;\n      typCounts[type] = (typCounts[type] || 0) + 1;\n    });\n    return Object.entries(typCounts);\n  };\n\n  return (\n    <>\n    <div className=\"whole-page\" style={{ overflow: 'auto', maxHeight: '75vh' }}>\n    <h2>TECHsavants Inc: Where Innovation Meets Expertise</h2>\n    <h3 >We turn dreams into digital realities. At our core, we are more than just technologists.<br></br>We are dream-weavers, alchemists of the digital realm.</h3>\n    </div> \n      <div className='sideNav'>\n        <SideNav />\n      </div>\n      <div className='graphLay'>\n            <GraphLayout breweryTypeCounts={breweryTypeCount} />\n          </div>\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC;IAC7BS,QAAQ,EAAE,EADmB;IAE7BC,KAAK,EAAE,EAFsB;IAG7BC,IAAI,EAAE,EAHuB;IAI7BC,IAAI,EAAE,EAJuB;IAK7BC,KAAK,EAAE;EALsB,CAAD,CAA9B;EAQAZ,SAAS,CAAC,MAAM;IACd,eAAea,iBAAf,GAAmC;MACjC,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMb,QAAQ,CAACc,IAAT,CAAc,WAAd,EAA2BC,MAA3B,EAA9B;;MAEA,IAAIF,KAAJ,EAAW;QACTG,OAAO,CAACH,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;MACD,CAFD,MAEO,IAAID,IAAI,IAAIA,IAAI,CAACK,MAAL,GAAc,CAA1B,EAA6B;QAClC,MAAMC,YAAY,GAAGN,IAAI,CAAC,CAAD,CAAzB;QACAP,MAAM,CAAC;UACLC,QAAQ,EAAEY,YAAY,CAACC,IADlB;UAELZ,KAAK,EAAEW,YAAY,CAACE,WAFf;UAGLZ,IAAI,EAAEU,YAAY,CAACG,UAHd;UAILZ,IAAI,EAAES,YAAY,CAACI,WAJd;UAKLZ,KAAK,EAAEQ,YAAY,CAACR;QALf,CAAD,CAAN;QAOA,MAAMa,QAAQ,GAAGC,WAAW,CAACZ,IAAD,CAA5B;QACAI,OAAO,CAACS,GAAR,CAAYF,QAAZ;QACApB,mBAAmB,CAACoB,QAAD,CAAnB;MACD;IACF;;IAEDZ,iBAAiB;EAClB,CAtBQ,EAsBN,CAACe,EAAD,CAtBM,CAAT;;EAwBA,MAAMF,WAAW,GAAIG,YAAD,IAAkB;IACpC,MAAMC,SAAS,GAAG,EAAlB;IACAD,YAAY,CAACE,OAAb,CAAsBC,IAAD,IAAU;MAC7B,MAAMC,IAAI,GAAGD,IAAI,CAACT,UAAlB;MACAO,SAAS,CAACG,IAAD,CAAT,GAAkB,CAACH,SAAS,CAACG,IAAD,CAAT,IAAmB,CAApB,IAAyB,CAA3C;IACD,CAHD;IAIA,OAAOC,MAAM,CAACC,OAAP,CAAeL,SAAf,CAAP;EACD,CAPD;;EASA,oBACE;IAAA,wBACA;MAAK,SAAS,EAAC,YAAf;MAA4B,KAAK,EAAE;QAAEM,QAAQ,EAAE,MAAZ;QAAoBC,SAAS,EAAE;MAA/B,CAAnC;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAA,oHAA6F;UAAA;UAAA;UAAA;QAAA,QAA7F;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAKE;MAAK,SAAS,EAAC,SAAf;MAAA,uBACE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAQE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACM,QAAC,WAAD;QAAa,iBAAiB,EAAEjC;MAAhC;QAAA;QAAA;QAAA;MAAA;IADN;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAcD;;GA1DQD,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}