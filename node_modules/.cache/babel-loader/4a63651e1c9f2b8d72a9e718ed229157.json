{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nimport _isEqual from \"lodash/isEqual\";\nimport _sortBy from \"lodash/sortBy\";\nimport _upperFirst from \"lodash/upperFirst\";\nimport _isString from \"lodash/isString\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isArray from \"lodash/isArray\";\nimport _max from \"lodash/max\";\nimport _min from \"lodash/min\";\nimport _flatMap from \"lodash/flatMap\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nimport * as d3Scales from 'victory-vendor/d3-scale';\nimport { stack as shapeStack, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderNone } from 'victory-vendor/d3-shape';\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport { ErrorBar } from '../cartesian/ErrorBar';\nimport { findEntryInArray, getPercentValue, isNumber, isNumOrStr, mathSign, uniqueId } from './DataUtils';\nimport { filterProps, findAllByType, getDisplayName } from './ReactUtils'; // TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';\n\nimport { getLegendProps } from './getLegendProps'; // Exported for backwards compatibility\n\nexport { getLegendProps };\nexport function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (_isNil(obj) || _isNil(dataKey)) {\n    return defaultValue;\n  }\n\n  if (isNumOrStr(dataKey)) {\n    return _get(obj, dataKey, defaultValue);\n  }\n\n  if (_isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n}\n/**\n * Get domain of data by key.\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\nexport function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = _flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    // @ts-expect-error parseFloat type only accepts strings\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry);\n    });\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !_isNil(entry);\n  }) : flattenData; // Supports x-axis of Date type\n\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) || entry instanceof Date ? entry : '';\n  });\n}\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {\n  var _ticks$length;\n\n  var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;\n  var axis = arguments.length > 3 ? arguments[3] : undefined;\n  var index = -1;\n  var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0; // if there are 1 or less ticks ticks then the active tick is at index 0\n\n  if (len <= 1) {\n    return 0;\n  }\n\n  if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n    var range = axis.range; // ticks are distributed in a circle\n\n    for (var i = 0; i < len; i++) {\n      var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n      var cur = unsortedTicks[i].coordinate;\n      var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n      var sameDirectionCoord = void 0;\n\n      if (mathSign(cur - before) !== mathSign(after - cur)) {\n        var diffInterval = [];\n\n        if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n          sameDirectionCoord = after;\n          var curInRange = cur + range[1] - range[0];\n          diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n          diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n        } else {\n          sameDirectionCoord = before;\n          var afterInRange = after + range[1] - range[0];\n          diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n          diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n        }\n\n        var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n        if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      } else {\n        var min = Math.min(before, after);\n        var max = Math.max(before, after);\n\n        if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    // ticks are distributed in a single direction\n    for (var _i = 0; _i < len; _i++) {\n      if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n        index = ticks[_i].index;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n      displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\nexport var getBarSizeList = function getBarSizeList(_ref2) {\n  var globalSize = _ref2.barSize,\n      _ref2$stackGroups = _ref2.stackGroups,\n      stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: _isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Calculate the size of each bar and offset between start of band and the bar\n *\n * @param  {number} bandSize is the size of area where bars can render\n * @param  {number | string} barGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {number | string} barCategoryGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {Array<object>} sizeList Sizes of all groups\n * @param  {number} maxBarSize The maximum size of each bar\n * @return {Array<object>} The size and offset of each bar\n */\n\nexport var getBarPosition = function getBarPosition(_ref3) {\n  var barGap = _ref3.barGap,\n      barCategoryGap = _ref3.barCategoryGap,\n      bandSize = _ref3.bandSize,\n      _ref3$sizeList = _ref3.sizeList,\n      sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList,\n      maxBarSize = _ref3.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = []; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len; // @ts-expect-error the type check above does not check for type number explicitly\n\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newPosition = {\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          // @ts-expect-error the type check above does not check for type number explicitly\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      };\n      var newRes = [].concat(_toConsumableArray(res), [newPosition]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, initialValue);\n  }\n\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n\n  if (legendProps) {\n    var _ref4 = legendBox || {},\n        boxWidth = _ref4.width,\n        boxHeight = _ref4.height;\n\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && isNumber(offset[align])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && isNumber(offset[verticalAlign])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));\n    }\n  }\n\n  return offset;\n};\n\nvar isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {\n  if (_isNil(axisType)) {\n    return true;\n  }\n\n  if (layout === 'horizontal') {\n    return axisType === 'yAxis';\n  }\n\n  if (layout === 'vertical') {\n    return axisType === 'xAxis';\n  }\n\n  if (direction === 'x') {\n    return axisType === 'xAxis';\n  }\n\n  if (direction === 'y') {\n    return axisType === 'yAxis';\n  }\n\n  return true;\n};\n\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, layout, axisType);\n  }).filter(function (entry) {\n    return !_isNil(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {LayoutType} layout The type of layout\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce( // @ts-expect-error if (type === number) means that the domain is numerical type\n    // - but this link is missing in the type definition\n    function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      // @ts-expect-error Date cannot index an object\n      if (!tag[entry[i]]) {\n        // @ts-expect-error Date cannot index an object\n        tag[entry[i]] = true; // @ts-expect-error Date cannot index an object\n\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nexport var isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks           The ticks in axis\n * @param {Number} min             The minimun value of axis\n * @param {Number} max             The maximun value of axis\n * @param {boolean} syncWithTicks  Synchronize grid lines with ticks or not\n * @return {Array}                 Coordinates\n */\n\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max, syncWithTicks) {\n  if (syncWithTicks) {\n    return ticks.map(function (entry) {\n      return entry.coordinate;\n    });\n  }\n\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks set by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    var result = (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        // If the scaleContent is not a number, the coordinate will be NaN.\n        // That could be the case for example with a PointScale and a string as domain.\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n    return result.filter(function (row) {\n      return !_isNaN(row.coordinate);\n    });\n  } // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n\n\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if (_isFunction(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (_isFunction(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if (_isFunction(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (_isFunction(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if (_isFunction(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @param  {Boolean}  hasBar        if it has a bar\n * @return {object}               The scale function and resolved name\n */\n\nexport var parseScale = function parseScale(axis, chartType, hasBar) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if (_isString(scale)) {\n    var name = \"scale\".concat(_upperFirst(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return _isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n/**\n * Both value and domain are tuples of two numbers\n * - but the type stays as array of numbers until we have better support in rest of the app\n * @param {Array} value input that will be truncated\n * @param {Array} domain boundaries\n * @returns {Array} tuple of two numbers\n */\n\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/**\n * Stacks all positive numbers above zero and all negative numbers below zero.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\n\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n\n    }\n  }\n};\n/**\n * Replaces all negative values with zero when stacking data.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\n\nexport var offsetPositive = function offsetPositive(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = 0;\n        series[i][j][1] = 0;\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n\n    }\n  }\n};\n/**\n * Function type to compute offset for stacked data.\n *\n * d3-shape has something fishy going on with its types.\n * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.\n * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.\n * The same I can see in the source code itself:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n * That one unfortunately has no types but we can tell it passes three-dimensional array.\n *\n * Which leads me to believe that definitelytyped is wrong on this one.\n * There's open discussion on this topic without much attention:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n */\n\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  // @ts-expect-error definitelytyped types are incorrect\n  expand: stackOffsetExpand,\n  // @ts-expect-error definitelytyped types are incorrect\n  none: stackOffsetNone,\n  // @ts-expect-error definitelytyped types are incorrect\n  silhouette: stackOffsetSilhouette,\n  // @ts-expect-error definitelytyped types are incorrect\n  wiggle: stackOffsetWiggle,\n  positive: offsetPositive\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var offsetAccessor = STACK_OFFSET_MAP[offsetType];\n  var stack = shapeStack() // @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys\n  .keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone) // @ts-expect-error definitelytyped types are incorrect\n  .offset(offsetAccessor);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var parentStackGroupsInitialValue = {};\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props2 = item.props,\n        stackId = _item$props2.stackId,\n        hide = _item$props2.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));\n  }, parentStackGroupsInitialValue);\n  var axisStackGroupsInitialValue = {};\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      var stackGroupsInitialValue = {};\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, stackGroupsInitialValue);\n    }\n\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));\n  }, axisStackGroupsInitialValue);\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n\n    if (!domain.length) {\n      return null;\n    }\n\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain([_min(tickValues), _max(tickValues)]);\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref5) {\n  var axis = _ref5.axis,\n      ticks = _ref5.ticks,\n      bandSize = _ref5.bandSize,\n      entry = _ref5.entry,\n      index = _ref5.index,\n      dataKey = _ref5.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\n  return !_isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      offset = _ref6.offset,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref7) {\n  var numericAxis = _ref7.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group) {\n      var itemIndex = group.items.indexOf(item);\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (_isFunction(specifiedDomain)) {\n    return specifiedDomain(dataDomain, allowDataOverflow);\n  }\n\n  if (!_isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (_isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (_isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\n\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  // @ts-expect-error we need to rethink scale type\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    // @ts-expect-error we need to rethink scale type\n    var bandWidth = axis.scale.bandwidth();\n\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = _sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return isBar ? undefined : 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis ReactElement\n * @returns {Array}        domains\n */\n\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\nexport var getTooltipItem = function getTooltipItem(graphicalItem, payload) {\n  var _graphicalItem$props = graphicalItem.props,\n      dataKey = _graphicalItem$props.dataKey,\n      name = _graphicalItem$props.name,\n      unit = _graphicalItem$props.unit,\n      formatter = _graphicalItem$props.formatter,\n      tooltipType = _graphicalItem$props.tooltipType,\n      chartType = _graphicalItem$props.chartType;\n  return _objectSpread(_objectSpread({}, filterProps(graphicalItem)), {}, {\n    dataKey: dataKey,\n    unit: unit,\n    formatter: formatter,\n    name: name || dataKey,\n    color: getMainColorOfGraphicItem(graphicalItem),\n    value: getValueByDataKey(payload, dataKey),\n    type: tooltipType,\n    payload: payload,\n    chartType: chartType\n  });\n};","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","_isEqual","_sortBy","_upperFirst","_isString","_isNaN","_isArray","_max","_min","_flatMap","_isFunction","_get","_isNil","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","i","arr2","d3Scales","stack","shapeStack","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderNone","getNiceTickValues","getTickValuesFixedDomain","ErrorBar","findEntryInArray","getPercentValue","isNumber","isNumOrStr","mathSign","uniqueId","filterProps","findAllByType","getDisplayName","getLegendProps","getValueByDataKey","dataKey","defaultValue","getDomainOfDataByKey","data","type","filterNil","flattenData","entry","domain","parseFloat","Infinity","validateData","map","Date","calculateActiveTickIndex","coordinate","_ticks$length","ticks","unsortedTicks","axis","index","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","diffInterval","curInRange","min","max","afterInRange","sameInterval","_i","getMainColorOfGraphicItem","item","_ref","displayName","_item$props","props","stroke","fill","result","getBarSizeList","_ref2","globalSize","barSize","_ref2$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","indexOf","selfSize","cateId","stackList","getBarPosition","_ref3","barGap","barCategoryGap","bandSize","_ref3$sizeList","sizeList","maxBarSize","realBarGap","initialValue","useFull","fullBarSize","sum","reduce","offset","prev","size","newPosition","position","newRes","concat","_offset","originalSize","appendOffsetOfLegend","_unused","legendBox","children","width","margin","legendWidth","left","right","legendProps","_ref4","boxWidth","boxHeight","height","align","verticalAlign","layout","isErrorBarRelevantForAxis","direction","getDomainOfErrorBars","errorBars","errorBarChild","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","parseErrorBarsOfAxis","domains","getDomainOfItemsWithSameAxis","tag","isCategoricalAxis","getCoordinatesOfGrid","syncWithTicks","hasMin","hasMax","values","getTicksOfAxis","isGrid","isAll","scale","duplicateDomain","offsetForBand","realScaleType","bandwidth","niceTicks","scaleContent","row","isCategorical","categoricalDomain","tickCount","combineEventHandlers","defaultHandler","parentHandler","childHandler","customizedHandler","arg1","arg2","arg3","arg4","parseScale","chartType","hasBar","scaleBand","scaleLinear","scalePoint","EPS","checkDomainOfScale","first","last","findPositionOfBar","barPosition","child","truncateByDomain","offsetSign","series","m","positive","negative","offsetPositive","STACK_OFFSET_MAP","sign","expand","none","silhouette","wiggle","getStackedData","stackItems","offsetType","dataKeys","offsetAccessor","d","order","getStackGroupsByAxisId","_items","numericAxisId","reverseStackOrder","reverse","parentStackGroupsInitialValue","_item$props2","stackId","hide","axisId","parentGroup","hasStack","childGroup","axisStackGroupsInitialValue","group","stackGroupsInitialValue","g","stackedData","getTicksOfScale","opts","originalDomain","allowDecimals","scaleType","tickValues","_domain","_tickValues","getCateCoordinateOfLine","_ref5","allowDuplicatedCategory","matchedTick","getCateCoordinateOfBar","_ref6","getBaseValueOfBar","_ref7","numericAxis","getStackedDataOfItem","itemIndex","getDomainOfSingle","getDomainOfStackGroups","startIndex","endIndex","s","MIN_VALUE_REG","MAX_VALUE_REG","parseSpecifiedDomain","specifiedDomain","dataDomain","allowDataOverflow","exec","_value","getBandSizeOfAxis","isBar","bandWidth","orderedTicks","parseDomainOfCategoryAxis","calculatedDomain","axisChild","getTooltipItem","graphicalItem","payload","_graphicalItem$props","unit","formatter","tooltipType","color"],"sources":["C:/Users/Ashwini/AndroidStudioProjects/web102_unit7lab-main/teammates/node_modules/recharts/es6/util/ChartUtils.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport _isEqual from \"lodash/isEqual\";\nimport _sortBy from \"lodash/sortBy\";\nimport _upperFirst from \"lodash/upperFirst\";\nimport _isString from \"lodash/isString\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isArray from \"lodash/isArray\";\nimport _max from \"lodash/max\";\nimport _min from \"lodash/min\";\nimport _flatMap from \"lodash/flatMap\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport * as d3Scales from 'victory-vendor/d3-scale';\nimport { stack as shapeStack, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderNone } from 'victory-vendor/d3-shape';\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport { ErrorBar } from '../cartesian/ErrorBar';\nimport { findEntryInArray, getPercentValue, isNumber, isNumOrStr, mathSign, uniqueId } from './DataUtils';\nimport { filterProps, findAllByType, getDisplayName } from './ReactUtils';\n// TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';\nimport { getLegendProps } from './getLegendProps';\n\n// Exported for backwards compatibility\nexport { getLegendProps };\nexport function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (_isNil(obj) || _isNil(dataKey)) {\n    return defaultValue;\n  }\n  if (isNumOrStr(dataKey)) {\n    return _get(obj, dataKey, defaultValue);\n  }\n  if (_isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n  return defaultValue;\n}\n/**\n * Get domain of data by key.\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\nexport function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = _flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n  if (type === 'number') {\n    // @ts-expect-error parseFloat type only accepts strings\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry);\n    });\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\n  }\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !_isNil(entry);\n  }) : flattenData;\n\n  // Supports x-axis of Date type\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) || entry instanceof Date ? entry : '';\n  });\n}\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {\n  var _ticks$length;\n  var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;\n  var axis = arguments.length > 3 ? arguments[3] : undefined;\n  var index = -1;\n  var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;\n\n  // if there are 1 or less ticks ticks then the active tick is at index 0\n  if (len <= 1) {\n    return 0;\n  }\n  if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n    var range = axis.range;\n    // ticks are distributed in a circle\n    for (var i = 0; i < len; i++) {\n      var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n      var cur = unsortedTicks[i].coordinate;\n      var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n      var sameDirectionCoord = void 0;\n      if (mathSign(cur - before) !== mathSign(after - cur)) {\n        var diffInterval = [];\n        if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n          sameDirectionCoord = after;\n          var curInRange = cur + range[1] - range[0];\n          diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n          diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n        } else {\n          sameDirectionCoord = before;\n          var afterInRange = after + range[1] - range[0];\n          diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n          diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n        }\n        var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n        if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      } else {\n        var min = Math.min(before, after);\n        var max = Math.max(before, after);\n        if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    // ticks are distributed in a single direction\n    for (var _i = 0; _i < len; _i++) {\n      if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n        index = ticks[_i].index;\n        break;\n      }\n    }\n  }\n  return index;\n};\n\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n    displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n  var _item$props = item.props,\n    stroke = _item$props.stroke,\n    fill = _item$props.fill;\n  var result;\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n    default:\n      result = fill;\n      break;\n  }\n  return result;\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\nexport var getBarSizeList = function getBarSizeList(_ref2) {\n  var globalSize = _ref2.barSize,\n    _ref2$stackGroups = _ref2.stackGroups,\n    stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;\n  if (!stackGroups) {\n    return {};\n  }\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n        items = _sgs$stackIds$j.items,\n        cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: _isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n  return result;\n};\n/**\n * Calculate the size of each bar and offset between start of band and the bar\n *\n * @param  {number} bandSize is the size of area where bars can render\n * @param  {number | string} barGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {number | string} barCategoryGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {Array<object>} sizeList Sizes of all groups\n * @param  {number} maxBarSize The maximum size of each bar\n * @return {Array<object>} The size and offset of each bar\n */\nexport var getBarPosition = function getBarPosition(_ref3) {\n  var barGap = _ref3.barGap,\n    barCategoryGap = _ref3.barCategoryGap,\n    bandSize = _ref3.bandSize,\n    _ref3$sizeList = _ref3.sizeList,\n    sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList,\n    maxBarSize = _ref3.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = [];\n\n  // whether or not is barSize setted by user\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    // @ts-expect-error the type check above does not check for type number explicitly\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newPosition = {\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          // @ts-expect-error the type check above does not check for type number explicitly\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      };\n      var newRes = [].concat(_toConsumableArray(res), [newPosition]);\n      prev = newRes[newRes.length - 1].position;\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n      return newRes;\n    }, initialValue);\n  }\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {\n  var children = props.children,\n    width = props.width,\n    margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n  if (legendProps) {\n    var _ref4 = legendBox || {},\n      boxWidth = _ref4.width,\n      boxHeight = _ref4.height;\n    var align = legendProps.align,\n      verticalAlign = legendProps.verticalAlign,\n      layout = legendProps.layout;\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && isNumber(offset[align])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));\n    }\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && isNumber(offset[verticalAlign])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));\n    }\n  }\n  return offset;\n};\nvar isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {\n  if (_isNil(axisType)) {\n    return true;\n  }\n  if (layout === 'horizontal') {\n    return axisType === 'yAxis';\n  }\n  if (layout === 'vertical') {\n    return axisType === 'xAxis';\n  }\n  if (direction === 'x') {\n    return axisType === 'xAxis';\n  }\n  if (direction === 'y') {\n    return axisType === 'yAxis';\n  }\n  return true;\n};\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);\n  });\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, layout, axisType);\n  }).filter(function (entry) {\n    return !_isNil(entry);\n  });\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n  return null;\n};\n\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {LayoutType} layout The type of layout\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(\n    // @ts-expect-error if (type === number) means that the domain is numerical type\n    // - but this link is missing in the type definition\n    function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n  var tag = {};\n  // Get the union set of category axis\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      // @ts-expect-error Date cannot index an object\n      if (!tag[entry[i]]) {\n        // @ts-expect-error Date cannot index an object\n        tag[entry[i]] = true;\n\n        // @ts-expect-error Date cannot index an object\n        result.push(entry[i]);\n      }\n    }\n    return result;\n  }, []);\n};\nexport var isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks           The ticks in axis\n * @param {Number} min             The minimun value of axis\n * @param {Number} max             The maximun value of axis\n * @param {boolean} syncWithTicks  Synchronize grid lines with ticks or not\n * @return {Array}                 Coordinates\n */\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max, syncWithTicks) {\n  if (syncWithTicks) {\n    return ticks.map(function (entry) {\n      return entry.coordinate;\n    });\n  }\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n    return entry.coordinate;\n  });\n  if (!hasMin) {\n    values.push(min);\n  }\n  if (!hasMax) {\n    values.push(max);\n  }\n  return values;\n};\n\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n    type = axis.type,\n    range = axis.range;\n  var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset;\n\n  // The ticks set by user should only affect the ticks adjacent to axis line\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    var result = (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        // If the scaleContent is not a number, the coordinate will be NaN.\n        // That could be the case for example with a PointScale and a string as domain.\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n    return result.filter(function (row) {\n      return !_isNaN(row.coordinate);\n    });\n  }\n\n  // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  // When axis has duplicated text, serial numbers are used to generate scale\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n  if (_isFunction(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (_isFunction(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n  if (_isFunction(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (_isFunction(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n      if (_isFunction(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n  return null;\n};\n\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @param  {Boolean}  hasBar        if it has a bar\n * @return {object}               The scale function and resolved name\n */\nexport var parseScale = function parseScale(axis, chartType, hasBar) {\n  var scale = axis.scale,\n    type = axis.type,\n    layout = axis.layout,\n    axisType = axis.axisType;\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n  if (_isString(scale)) {\n    var name = \"scale\".concat(_upperFirst(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n  return _isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n  return null;\n};\n\n/**\n * Both value and domain are tuples of two numbers\n * - but the type stays as array of numbers until we have better support in rest of the app\n * @param {Array} value input that will be truncated\n * @param {Array} domain boundaries\n * @returns {Array} tuple of two numbers\n */\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n  if (!isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n  if (!isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n  if (result[0] > max) {\n    result[0] = max;\n  }\n  if (result[1] < min) {\n    result[1] = min;\n  }\n  return result;\n};\n\n/**\n * Stacks all positive numbers above zero and all negative numbers below zero.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n  if (n <= 0) {\n    return;\n  }\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n    }\n  }\n};\n\n/**\n * Replaces all negative values with zero when stacking data.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\nexport var offsetPositive = function offsetPositive(series) {\n  var n = series.length;\n  if (n <= 0) {\n    return;\n  }\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = 0;\n        series[i][j][1] = 0;\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n    }\n  }\n};\n\n/**\n * Function type to compute offset for stacked data.\n *\n * d3-shape has something fishy going on with its types.\n * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.\n * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.\n * The same I can see in the source code itself:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n * That one unfortunately has no types but we can tell it passes three-dimensional array.\n *\n * Which leads me to believe that definitelytyped is wrong on this one.\n * There's open discussion on this topic without much attention:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n */\n\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  // @ts-expect-error definitelytyped types are incorrect\n  expand: stackOffsetExpand,\n  // @ts-expect-error definitelytyped types are incorrect\n  none: stackOffsetNone,\n  // @ts-expect-error definitelytyped types are incorrect\n  silhouette: stackOffsetSilhouette,\n  // @ts-expect-error definitelytyped types are incorrect\n  wiggle: stackOffsetWiggle,\n  positive: offsetPositive\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var offsetAccessor = STACK_OFFSET_MAP[offsetType];\n  var stack = shapeStack()\n  // @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys\n  .keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone)\n  // @ts-expect-error definitelytyped types are incorrect\n  .offset(offsetAccessor);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  }\n\n  // reversing items to affect render order (for layering)\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var parentStackGroupsInitialValue = {};\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props2 = item.props,\n      stackId = _item$props2.stackId,\n      hide = _item$props2.hide;\n    if (hide) {\n      return result;\n    }\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));\n  }, parentStackGroupsInitialValue);\n  var axisStackGroupsInitialValue = {};\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n    if (group.hasStack) {\n      var stackGroupsInitialValue = {};\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, stackGroupsInitialValue);\n    }\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));\n  }, axisStackGroupsInitialValue);\n};\n\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n    type = opts.type,\n    tickCount = opts.tickCount,\n    originalDomain = opts.originalDomain,\n    allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    if (!domain.length) {\n      return null;\n    }\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain([_min(tickValues), _max(tickValues)]);\n    return {\n      niceTicks: tickValues\n    };\n  }\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n    return {\n      niceTicks: _tickValues\n    };\n  }\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref5) {\n  var axis = _ref5.axis,\n    ticks = _ref5.ticks,\n    bandSize = _ref5.bandSize,\n    entry = _ref5.entry,\n    index = _ref5.index,\n    dataKey = _ref5.dataKey;\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\n  return !_isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {\n  var axis = _ref6.axis,\n    ticks = _ref6.ticks,\n    offset = _ref6.offset,\n    bandSize = _ref6.bandSize,\n    entry = _ref6.entry,\n    index = _ref6.index;\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref7) {\n  var numericAxis = _ref7.numericAxis;\n  var domain = numericAxis.scale.domain();\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n    if (max < 0) {\n      return max;\n    }\n    return min;\n  }\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n    if (group) {\n      var itemIndex = group.items.indexOf(item);\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n  return null;\n};\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (_isFunction(specifiedDomain)) {\n    return specifiedDomain(dataDomain, allowDataOverflow);\n  }\n  if (!_isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n  var domain = [];\n\n  /* eslint-disable prefer-destructuring */\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (_isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n    domain[1] = dataDomain[1] + _value;\n  } else if (_isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n  return domain;\n};\n\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  // @ts-expect-error we need to rethink scale type\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    // @ts-expect-error we need to rethink scale type\n    var bandWidth = axis.scale.bandwidth();\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = _sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n  return isBar ? undefined : 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis ReactElement\n * @returns {Array}        domains\n */\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n  return specifiedDomain;\n};\nexport var getTooltipItem = function getTooltipItem(graphicalItem, payload) {\n  var _graphicalItem$props = graphicalItem.props,\n    dataKey = _graphicalItem$props.dataKey,\n    name = _graphicalItem$props.name,\n    unit = _graphicalItem$props.unit,\n    formatter = _graphicalItem$props.formatter,\n    tooltipType = _graphicalItem$props.tooltipType,\n    chartType = _graphicalItem$props.chartType;\n  return _objectSpread(_objectSpread({}, filterProps(graphicalItem)), {}, {\n    dataKey: dataKey,\n    unit: unit,\n    formatter: formatter,\n    name: name || dataKey,\n    color: getMainColorOfGraphicItem(graphicalItem),\n    value: getValueByDataKey(payload, dataKey),\n    type: tooltipType,\n    payload: payload,\n    chartType: chartType\n  });\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}