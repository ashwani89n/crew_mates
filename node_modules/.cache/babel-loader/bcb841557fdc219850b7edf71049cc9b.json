{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwini\\\\AndroidStudioProjects\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './EditPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const post = data.find(item => item.id === id);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this); // Handle the case when the post doesn't exist\n  }\n\n  const [updatedPost, setUpdatedPost] = useState({\n    title: post.title,\n    author: post.author,\n    description: post.description\n  });\n\n  const updatePost = async event => {\n    event.preventDefault();\n    await supabase.from('Posts').update(updatedPost).eq('id', id);\n    window.location = \"/\";\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdatedPost({ ...updatedPost,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: updatedPost.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        value: updatedPost.author,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"50\",\n        id: \"description\",\n        name: \"description\",\n        value: updatedPost.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"deleteButton\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"65n7D59f1sv4Y/WbVRWprzlawV8=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","EditPost","data","id","post","find","item","updatedPost","setUpdatedPost","title","author","description","updatePost","event","preventDefault","from","update","eq","window","location","handleInputChange","name","value","target"],"sources":["C:/Users/Ashwini/AndroidStudioProjects/client/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './EditPost.css';\n\nconst EditPost = ({ data }) => {\n    const { id } = useParams();\n    const post = data.find(item => item.id === id);\n\n    if (!post) {\n        return <div>Post not found</div>; // Handle the case when the post doesn't exist\n    }\n\n    const [updatedPost, setUpdatedPost] = useState({\n        title: post.title,\n        author: post.author,\n        description: post.description,\n    });\n\n    const updatePost = async (event) => {\n        event.preventDefault();\n\n        await supabase\n            .from('Posts')\n            .update(updatedPost)\n            .eq('id', id);\n\n        window.location = \"/\";\n    };\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUpdatedPost({\n            ...updatedPost,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={updatePost}>\n                <label htmlFor=\"title\">Title</label> <br />\n                <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    value={updatedPost.title}\n                    onChange={handleInputChange}\n                /><br />\n                <br />\n\n                <label htmlFor=\"author\">Author</label><br />\n                <input\n                    type=\"text\"\n                    id=\"author\"\n                    name=\"author\"\n                    value={updatedPost.author}\n                    onChange={handleInputChange}\n                /><br />\n                <br />\n\n                <label htmlFor=\"description\">Description</label><br />\n                <textarea\n                    rows=\"5\"\n                    cols=\"50\"\n                    id=\"description\"\n                    name=\"description\"\n                    value={updatedPost.description}\n                    onChange={handleInputChange}\n                >\n                </textarea>\n                <br />\n                <input type=\"submit\" value=\"Update\" />\n                <button className=\"deleteButton\">Delete</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EditPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}